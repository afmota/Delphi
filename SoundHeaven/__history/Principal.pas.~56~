unit Principal;

interface

uses System.SysUtils, System.Classes, Vcl.Forms, Vcl.Menus, Vcl.Controls,
  Vcl.ComCtrls, Vcl.ExtCtrls, Vcl.StdCtrls, StyledButton;

type
  TfrmPrincipal = class(TForm)
    MainMenu: TMainMenu;
    Cadastros1: TMenuItem;
    Sair1: TMenuItem;
    StatusBar1: TStatusBar;
    Estilos1: TMenuItem;
    Artistas1: TMenuItem;
    Gravadoras1: TMenuItem;
    Produtores1: TMenuItem;
    lbuns1: TMenuItem;
    pnlTaskBar: TPanel;
    AnimationTimer: TTimer;
    //procedure OpenMDIChild(AFormClass: TFormClass);
    procedure MenuClick(Sender: TObject);
    procedure Sair1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure AnimationTimerTimer(Sender: TObject);
  private
    TaskButtonCount: Integer; // Controla a quantidade de botões
    procedure AddTaskButton(AForm: TForm);
    procedure RemoveTaskButton(AForm: TForm);
    procedure TaskButtonClick(Sender: TObject);
    procedure FormCloseHandler(Sender: TObject; var Action: TCloseAction);
  public
    procedure OpenForm(AFormClass: TFormClass);
  end;

var
  frmPrincipal: TfrmPrincipal;

implementation

{$R *.dfm}

uses Estilos, Artistas, Produtores, Gravadoras, Albuns;

procedure TfrmPrincipal.OpenForm(AFormClass: TFormClass);
var
  NewForm: TForm;
begin
  // Verifica se o formulário já está aberto
  for var i := 0 to MDIChildCount - 1 do
  begin
    if MDIChildren[i] is AFormClass then
    begin
      MDIChildren[i].BringToFront;
      Exit;
    end;
  end;

  // Cria e configura o novo formulário MDI
  NewForm := AFormClass.Create(Self);
  NewForm.FormStyle := fsMDIChild;
  NewForm.OnClose := FormCloseHandler; // Define o evento OnClose
  NewForm.Show;

  // Adiciona o botão para o formulário recém-aberto
  AddTaskButton(NewForm);
end;

{procedure TfrmPrincipal.OpenMDIChild(AFormClass: TFormClass);
var
  ChildForm: TForm;
begin
  // Verifica se o formulário já está aberto
  ChildForm := nil;
  for var i := 0 to MDIChildCount - 1 do
    if MDIChildren[i].ClassType = AFormClass then
    begin
      ChildForm := MDIChildren[i];
      Break;
    end;

  // Se não estiver aberto, cria uma nova instância
  if not Assigned(ChildForm) then
    ChildForm := AFormClass.Create(Self);

  // Exibe o formulário MDI Child
  ChildForm.Show;
end;}

// Remove o botão da barra de tarefas ao fechar o formulário
procedure TfrmPrincipal.RemoveTaskButton(AForm: TForm);
var
  i: Integer;
begin
  for i := pnlTaskBar.ControlCount - 1 downto 0 do
  begin
    if (pnlTaskBar.Controls[i] is TStyledButton) and
       (TStyledButton(pnlTaskBar.Controls[i]).Tag = NativeInt(AForm)) then
    begin
      pnlTaskBar.Controls[i].Free;
      Break;
    end;
  end;
end;

// Adiciona um botão na barra de tarefas para o formulário aberto
procedure TfrmPrincipal.AddTaskButton(AForm: TForm);
var
  Btn: TStyledButton;
begin
  Btn := TStyledButton.Create(pnlTaskBar);
  Btn.Parent := pnlTaskBar;
  Btn.Align := alLeft;
  Btn.Width := 100;
  Btn.Caption := AForm.Caption;  // `Text` em vez de `Caption` no TStyledButton
  Btn.Tag := NativeInt(AForm); // Associa o botão ao formulário
  Btn.OnClick := TaskButtonClick; // Define o evento de clique
end;

procedure TfrmPrincipal.AnimationTimerTimer(Sender: TObject);
const
  SlideSpeed = 10; // Velocidade do deslizamento, ajuste conforme necessário
begin
  if SlidingIn then
  begin
    if pnlTaskBar.Height < 40 then // Defina a altura final desejada
      pnlTaskBar.Height := pnlTaskBar.Height + SlideSpeed
    else
      AnimationTimer.Enabled := False; // Finaliza a animação quando atinge a altura
  end
  else
  begin
    if pnlTaskBar.Height > 0 then
      pnlTaskBar.Height := pnlTaskBar.Height - SlideSpeed
    else
    begin
      AnimationTimer.Enabled := False;
      pnlTaskBar.Visible := False; // Oculta o painel quando a altura é 0
    end;
  end;
end;

procedure TfrmPrincipal.FormCloseHandler(Sender: TObject; var Action: TCloseAction);
begin
  Action := caFree; // Libera o formulário ao fechar
  RemoveTaskButton(TForm(Sender)); // Remove o botão correspondente na barra de tarefas
end;

procedure TfrmPrincipal.FormCreate(Sender: TObject);
begin
  pnlTaskBar.Align := alTop;  // Posiciona a barra de tarefas no topo
  pnlTaskBar.Height := 40;    // Define a altura da barra de tarefas
end;

procedure TfrmPrincipal.MenuClick(Sender: TObject);
begin
  case (Sender as TMenuItem).Tag of
    1: OpenForm(TfrmEstilos);
    2: OpenForm(TfrmArtistas);
    3: OpenForm(TfrmProdutores);
    4: OpenForm(TfrmGravadoras);
    5: OpenForm(TfrmAlbuns);
  end;
end;

procedure TfrmPrincipal.Sair1Click(Sender: TObject);
begin
  FreeAndNil(frmPrincipal);
  Application.Terminate;
end;

// Evento de clique do botão na barra de tarefas para focar no formulário correspondente
procedure TfrmPrincipal.TaskButtonClick(Sender: TObject);
var
  TargetForm: TForm;
begin
  TargetForm := TForm(TStyledButton(Sender).Tag);
  if Assigned(TargetForm) then
    TargetForm.BringToFront; // Coloca o formulário em foco
end;

end.
