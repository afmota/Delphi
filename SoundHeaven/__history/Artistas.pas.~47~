unit Artistas;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls,
  Vcl.Buttons;

type
  TOperacao = (opShow, opNovo, opAtualizar, opSalvar, opBuscar, opCancelar, opProcurar);
type
  TfrmArtistas = class(TForm)
    pnlCampos: TPanel;
    EdtID: TEdit;
    EdtNome: TEdit;
    ChkStatus: TCheckBox;
    LblID: TLabel;
    LblNome: TLabel;
    btnEncontrar: TSpeedButton;
    pnlBotoes: TPanel;
    btnNovo: TButton;
    btnBuscar: TButton;
    btnAtualizar: TButton;
    btnCancel: TButton;
    btnSave: TButton;
    btnSair: TButton;
    procedure FormCreate(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure btnCancelClick(Sender: TObject);
    procedure btnSaveClick(Sender: TObject);
    procedure btnBuscarClick(Sender: TObject);
    procedure btnEncontrarClick(Sender: TObject);
    procedure btnAtualizarClick(Sender: TObject);
    procedure btnSairClick(Sender: TObject);
    procedure LigaDesliga(Operacao: TOperacao);
    procedure EdtNomeChange(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmArtistas: TfrmArtistas;
  OpBD: Integer;

implementation

{$R *.dfm}

uses UArtistas, UArtistasDAO, UArtistasController;

procedure TfrmArtistas.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := caFree;
end;

procedure TfrmArtistas.FormCreate(Sender: TObject);
begin
  LigaDesliga(opShow);
end;

procedure TfrmArtistas.btnAtualizarClick(Sender: TObject);
begin
  LigaDesliga(opAtualizar);
  OpBD := 2;
  edtNome.SetFocus
end;

procedure TfrmArtistas.btnNovoClick(Sender: TObject);
begin
  LigaDesliga(opNovo);
  OpBD := 1;
  EdtNome.SetFocus;
end;

procedure TfrmArtistas.btnCancelClick(Sender: TObject);
begin
  LigaDesliga(opShow);
end;

procedure TfrmArtistas.btnBuscarClick(Sender: TObject);
begin
   LigaDesliga(opBuscar);
   edtID.SetFocus;
end;

procedure TfrmArtistas.btnEncontrarClick(Sender: TObject);
var
  Artista: TArtista;
  ArtistaController: TArtistasController;
  ArtistaID, Estado: Integer;
begin
  // Verificar se o valor do ID é válido (número)
  if not TryStrToInt(edtID.Text, ArtistaID) then
  begin
    MessageDlg('Por favor, insira um ID válido.', mtWarning, [mbOk], 0);
    edtId.SetFocus;
    Exit;
  end;

  // Criar o controller
  ArtistaController := TArtistasController.Create;
  try
    // Buscar o artista pelo ID
    Artista := ArtistaController.BuscarArtista(ArtistaID);

    // Preencher os campos visuais se o artista for encontrado
    if Assigned(Artista) then
    begin
      edtNome.Text := Artista.Artista;
      Estado := Artista.Status;
      If Estado = 1 then ChkStatus.Checked := True else ChkStatus.Checked := False;
      btnAtualizar.Enabled := True;
    end
    else
    begin
      MessageDlg('Artista não encontrado', mtInformation, [mbOk], 0);
    end;
  finally
    Artista.Free;
    ArtistaController.Free;
  end;
end;

procedure TfrmArtistas.btnSairClick(Sender: TObject);
begin
  Close;
end;

procedure TfrmArtistas.btnSaveClick(Sender: TObject);
var
  Artista: TArtista;
  DAO: TArtistasDAO;
  Estado: Integer;
begin
  if ChkStatus.Checked then Estado := 1 else Estado := 0;

  Artista := TArtista.Create(edtNome.Text, Estado);
  if edtId.Text <> '' then Artista.ID := StrToInt(edtID.Text);
  DAO := TArtistasDAO.Create;

  case OpBD of
    1: begin
      try
        DAO.Inserir(Artista);
      finally
        DAO.Free;
      end;
    end;
    2: begin
      try
        DAO.Atualizar(Artista);
      finally
        DAO.Free;
      end;
    end;
  end;


  LigaDesliga(opShow);
end;

procedure TfrmArtistas.EdtNomeChange(Sender: TObject);
begin
btnSave.Enabled := True;
end;

procedure TfrmArtistas.LigaDesliga(Operacao: TOperacao);
begin
  case Operacao of
    opShow: begin // create, save, cancel
      edtId.Text := '';
      edtNome.Text := '';

      btnNovo.Enabled      := True;
      btnAtualizar.Enabled := False;
      btnSave.Enabled      := False;
      btnBuscar.Enabled    := True;
      btnCancel.Enabled    := False;
      btnSair.Enabled      := True;
      pnlCampos.Enabled    := False;
      edtId.Enabled        := False;
      btnEncontrar.Enabled := False;
      edtNome.Enabled      := False;
      chkStatus.Enabled    := False;
    end;
    opNovo: begin
      edtId.Text := '';
      edtNome.Text := '';

      btnNovo.Enabled      := False;
      btnAtualizar.Enabled := False;
      btnSave.Enabled      := True;
      btnBuscar.Enabled    := False;
      btnCancel.Enabled    := True;
      btnSair.Enabled      := False;
      pnlCampos.Enabled    := True;
      edtId.Enabled        := False;
      btnEncontrar.Enabled := False;
      edtNome.Enabled      := True;
      chkStatus.Enabled    := True;
    end;
    opBuscar: begin
      btnNovo.Enabled      := False;
      btnAtualizar.Enabled := False;
      btnSave.Enabled      := True;
      btnBuscar.Enabled    := False;
      btnCancel.Enabled    := True;
      btnSair.Enabled      := False;
      pnlCampos.Enabled    := True;
      edtId.Enabled        := True;
      btnEncontrar.Enabled := True;
      edtNome.Enabled      := False;
      chkStatus.Enabled    := False;
    end;
    opAtualizar: begin
      btnNovo.Enabled      := False;
      btnAtualizar.Enabled := False;
      btnSave.Enabled      := False;
      btnBuscar.Enabled    := False;
      btnCancel.Enabled    := True;
      btnSair.Enabled      := False;
      pnlCampos.Enabled    := True;
      edtId.Enabled        := False;
      btnEncontrar.Enabled := False;
      edtNome.Enabled      := True;
      chkStatus.Enabled    := True;
    end;
  end;
end;

end.
