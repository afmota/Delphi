unit UGravadoraDAO;

interface

uses UConexao, UGravadora, Data.Win.ADODB, System.SysUtils;

type
  TGravadoraDAO = class
  private
    FConn: TConexaoDB; // Conexão com o SQL Server
  public
    constructor Create;
    destructor Destroy;
    function Inserir(Gravadora: TGravadora): Boolean;
    function Atualizar(Gravadora: TGravadora): Boolean;
    function BuscarGravadora(ID: Integer): TGravadora;
  end;

implementation

constructor TGravadoraDAO.Create;
begin
  FConn := TConexaoDB.Create; //Instancia a conexão ADO
end;

destructor TGravadoraDAO.Destroy;
begin
  FConn.Free; // Liberar a conexão ao destruir
  inherited;
end;

procedure TGravadoraDAO.Inserir(Gravadora: TGravadora);
var
  Query: TADOQuery;
begin
  try
    Query := TADOQuery.Create(nil);
    Query.Connection := FConn.GetConnection;
    Query.SQL.Text := 'INSERT INTO TB_Gravadoras (Gravadora_Nome, Gravadora_Status, DataInclusao) ' +
                      'VALUES (:Nome, :Status, :DataInclusao)';
    Query.Parameters.ParamByName('Nome').Value := Gravadora.Nome;
    Query.Parameters.ParamByName('Status').Value := Gravadora.Status;
    Query.Parameters.ParamByName('DataInclusao').Value := Gravadora.DataInclusao;
    Query.ExecSQL;
  finally
    Query.Free;
  end;
end;

function TGravadoraDAO.Atualizar(Gravadora: TGravadora): Boolean;
var
  StoredProc: TADOStoredProc;
begin
  try
    try
      StoredProc := TADOStoredProc.Create(nil);

      with StoredProc do
      begin
        Connection := FConn.GetConnection;
        ProcedureName := 'sp_AtualizarGravadora';

        with Parameters do
        begin
          ParamByName('@Gravadora_ID').Value := Gravadora.ID;
          ParamByName('@Nome').Value := Gravadora.Nome;
          ParamByName('@Ativo').Value := Gravadora.Ativo;
          ParamByName('@DataAlteracao').Value := Gravadora.DataAlteracao;
        end;

        ExecProc;
        Result := True;
      end;
    except
      on E: Exception do
      begin
        raise Exception.Create('Erro ao atualizar Gravadora: ' + E.message);
      end;
    end;
  finally
    StoredProc.Free;
  end;
end;

function TGravadoraDAO.BuscarGravadora(ID: Integer): TGravadora;
var
  Query: TADOQuery;
  Gravadora: TGravadora;
begin
  try
    Query := TADOQuery.Create(nil);
    Query.Connection := FConn.GetConnection;
    Query.SQL.Text := 'SELECT * FROM TB_Gravadoras WHERE ID = :ID';
    Query.Parameters.ParamByName('ID').Value := ID;
    Query.Open;

    if not Query.IsEmpty then
    begin
      Gravadora := TGravadora.Create(Query.FieldByName('Gravadora_Nome').AsString,
                                     Query.FieldByName('Gravadora_Status').AsInteger);
      Gravadora.ID := Query.FieldByName('Gravadora_ID').AsInteger;
      Gravadora.DataInclusao := Query.FieldByName('DataInclusao').AsDateTime;
      Result := Gravadora;
    end
    else
      Result := nil;
  finally
    Query.Free;
  end;
end;

end.
